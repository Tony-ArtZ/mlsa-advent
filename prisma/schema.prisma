// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  email       String       @unique
  rollNumber  String?
  submissions Submission[]
  createdAt   DateTime     @default(now())
}

model Question {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  day            Int          @unique
  title          String
  description    String
  example        String
  constraints    String
  submissionHint String
  hint           String
  isLocked       Boolean      @default(true)
  difficulty     String
  emoji          String
  testCases      Json // Array of {input: string, expected: string}
  submissions    Submission[]
}

model Submission {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  code       String
  language   String
  day        Int
  userId     String   @db.ObjectId
  user       User     @relation(fields: [userId], references: [id])
  createdAt  DateTime @default(now())
  question   Question @relation(fields: [questionId], references: [id])
  questionId String   @db.ObjectId
  status     String   @default("pending")  // pending, running, completed, error
  passed     Boolean  @default(false)      // whether all test cases passed
  testResults Json?                        // Array of test case results
  executionTime Int?                       // execution time in milliseconds
  memory       Int?                        // memory usage in bytes
  compileOutput String?                    // compilation output if any
  stderr       String?                     // error output if any
}
